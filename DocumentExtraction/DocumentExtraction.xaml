<Activity mc:Ignorable="sap sap2010" x:Class="Main" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:p="http://schemas.uipath.com/workflow/activities/intelligentocr" xmlns:p1="http://schemas.uipath.com/workflow/activities/ocr" xmlns:p2="http://schemas.uipath.com/workflow/activities/intelligentocr/classification" xmlns:p3="http://schemas.uipath.com/workflow/activities/document-processing-contracts/classification" xmlns:p4="http://schemas.uipath.com/workflow/activities/document-processing-contracts/dom" xmlns:p5="http://schemas.uipath.com/workflow/activities/intelligentocr/extraction" xmlns:p6="http://schemas.uipath.com/workflow/activities/documentunderstanding-ml" xmlns:p7="http://schemas.uipath.com/workflow/activities/document-processing-contracts/results" xmlns:p8="http://schemas.uipath.com/workflow/activities/document-processing-contracts/extraction" xmlns:p9="http://schemas.uipath.com/workflow/activities/document-processing-contracts/taxonomy" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.ComponentModel;assembly=System.ComponentModel.TypeConverter" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Drawing;assembly=System.Drawing.Common" xmlns:sd1="clr-namespace:System.Drawing;assembly=System.Drawing.Primitives" xmlns:sd2="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:uga="clr-namespace:UiPath.GSuite.Activities;assembly=UiPath.GSuite.Activities" xmlns:ugas="clr-namespace:UiPath.GSuite.Activities.Sheets;assembly=UiPath.GSuite.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:um="clr-namespace:UiPath.Mail;assembly=UiPath.Mail.Activities" xmlns:umab="clr-namespace:UiPath.Mail.Activities.Business;assembly=UiPath.Mail.Activities" xmlns:umabh="clr-namespace:UiPath.Mail.Activities.Business.HtmlEditor;assembly=UiPath.Mail.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="In_supplierName" Type="InArgument(x:String)" />
    <x:Property Name="In_ReceivedDate" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1150,9263.333333333334</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="68">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Taxonomy</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.TaxonomyManagement</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.Digitization</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Dom</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.OCR.Activities</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Results</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.DataExtraction</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.DataExtraction</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.ValidationStation</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Classification</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.DocumentClassification</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Training</x:String>
      <x:String>UiPath.IntelligentOCR.Activities.Training</x:String>
      <x:String>UiPath.OmniPage.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.DocumentUnderstanding.ML.Activities</x:String>
      <x:String>UiPath.DocumentUnderstanding.ML.Activities.Editors</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.GSuite.Activities.Sheets</x:String>
      <x:String>UiPath.GSuite.Activities.Sheets.Enums</x:String>
      <x:String>UiPath.Shared.Activities.ConnectionService.Contracts</x:String>
      <x:String>UiPath.GSuite.Activities</x:String>
      <x:String>UiPath.GSuite.Activities.Contracts</x:String>
      <x:String>UiPath.GSuite</x:String>
      <x:String>UiPath.GSuite.Contracts</x:String>
      <x:String>UiPath.GSuite.Activities.Enums</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.Activities.Business</x:String>
      <x:String>UiPath.Mail.Activities.Utils</x:String>
      <x:String>UiPath.Mail.Activities.Business.HtmlEditor</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.Vision.OmniPage.Core</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="53">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.DocumentProcessing.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.DocumentUnderstanding.ML.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OmniPage.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.GSuite.Activities</AssemblyReference>
      <AssemblyReference>UiPath.PDF.Activities</AssemblyReference>
      <AssemblyReference>UiPath.GSuite</AssemblyReference>
      <AssemblyReference>System.Data.Entity</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Core</AssemblyReference>
      <AssemblyReference>UiPath.Vision.OmniPage.Core</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="1051.3333333333333,9565.333333333334" sap2010:WorkflowViewState.IdRef="Sequence_4">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:String[]" Name="filelist" />
      <Variable x:TypeArguments="x:String" Name="docPath" />
      <Variable x:TypeArguments="x:String" Name="folderPath" />
      <Variable x:TypeArguments="x:Int32" Name="IterateCount" />
      <Variable x:TypeArguments="sd2:DataTable" Name="simpleFieldDt" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign sap:VirtualizedContainerService.HintSize="989.3333333333334,63.333333333333336" sap2010:WorkflowViewState.IdRef="Assign_4">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[folderPath]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">["C:\Users\"+Environment.UserName+"\Documents\Uipath\GetPDFFromEmail\Data\Input"]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign sap:VirtualizedContainerService.HintSize="989.3333333333334,63.333333333333336" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="s:String[]">[filelist]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles(folderPath)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="989.3333333333334,9248" sap2010:WorkflowViewState.IdRef="ForEach`1_6" Values="[filelist]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="docPath" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="952.6666666666666,9118.666666666666" sap2010:WorkflowViewState.IdRef="Sequence_10">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="890.6666666666666,92" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[docPath]" />
            <Sequence sap:VirtualizedContainerService.HintSize="890.6666666666666,8876" sap2010:WorkflowViewState.IdRef="Sequence_1">
              <Sequence.Variables>
                <Variable x:TypeArguments="p9:DocumentTaxonomy" Name="Taxnomy" />
                <Variable x:TypeArguments="x:String" Name="docText" />
                <Variable x:TypeArguments="p4:Document" Name="DOM" />
                <Variable x:TypeArguments="p7:ExtractionResult" Name="extractionresult" />
                <Variable x:TypeArguments="p7:ExtractionResult" Name="extractedResult" />
                <Variable x:TypeArguments="p7:ClassificationResult[]" Name="classsificationResult" />
                <Variable x:TypeArguments="sd2:DataSet" Name="dataSet" />
                <Variable x:TypeArguments="x:Boolean" Name="simplefieldBool" />
                <Variable x:TypeArguments="x:String" Name="agreementNumber" />
                <Variable x:TypeArguments="x:String" Name="branchName" />
                <Variable x:TypeArguments="x:String" Name="branchCode" />
                <Variable x:TypeArguments="x:Boolean" Name="branchCodeAvaialble" />
                <Variable x:TypeArguments="x:String" Name="ML_ApiKey" />
                <Variable x:TypeArguments="x:String" Name="ExtractedGoogleSheetID" />
                <Variable x:TypeArguments="x:String" Name="pricingMailAddress" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <p:LoadTaxonomy DisplayName="Load Taxonomy" sap:VirtualizedContainerService.HintSize="828.6666666666666,108" sap2010:WorkflowViewState.IdRef="LoadTaxonomy_1" Taxonomy="[Taxnomy]" />
              <p:DigitizeDocument ApplyOcrMigrated="True" ApplyOcrOnPdf="Auto" DegreeOfParallelism="-1" DetectCheckboxes="True" DisplayName="Digitize Document" DocumentObjectModel="[DOM]" DocumentPath="[docPath]" DocumentText="[docText]" ForceApplyOCR="False" sap:VirtualizedContainerService.HintSize="828.6666666666666,307.3333333333333" sap2010:WorkflowViewState.IdRef="DigitizeDocument_1">
                <p:DigitizeDocument.OCREngine>
                  <ActivityFunc x:TypeArguments="sd:Image, x:String, scg:IEnumerable(scg:KeyValuePair(sd1:Rectangle, x:String))">
                    <ActivityFunc.Argument1>
                      <DelegateInArgument x:TypeArguments="sd:Image" Name="Image" />
                    </ActivityFunc.Argument1>
                    <ActivityFunc.Argument2>
                      <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                    </ActivityFunc.Argument2>
                    <p1:UiPathDocumentOCR Endpoint="{x:Null}" Output="{x:Null}" Text="{x:Null}" UseLocalServer="{x:Null}" ApiKey="TnfAgcpdryR5LRJb5yGufpvukgiMXzsenTRF93sScevyY/U9Qv9K/6cHCkksFwOmYRffiBfAOe76EUCcAhpCTQ==" ComputeSkewAngle="False" DisplayName="UiPath Document OCR" ExtractWords="True" sap:VirtualizedContainerService.HintSize="312,25.333333333333332" sap2010:WorkflowViewState.IdRef="UiPathDocumentOCR_1" Image="[Image]" Language="auto" PredictionId="[PredictionId]" Profile="None" Scale="1" Timeout="100000" />
                  </ActivityFunc>
                </p:DigitizeDocument.OCREngine>
              </p:DigitizeDocument>
              <p2:ClassifyDocumentScope ClassificationResults="[classsificationResult]" DisplayName="Classify Document Scope" DocumentObjectModel="[DOM]" DocumentPath="[docPath]" DocumentText="[docText]" sap:VirtualizedContainerService.HintSize="828.6666666666666,450" sap2010:WorkflowViewState.IdRef="ClassifyDocumentScope_1" Taxonomy="[Taxnomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI06bf42b6b5f84c3aa42724b8b024e3e8&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;Mitra.test.Tableee&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;Mitra.test.Tableee&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true},&quot;Mitra.NoCategory.British_Gysum&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;Mitra.NoCategory.British_Gysum&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true},&quot;Mitra.Document.Knauf_supplier&quot;:{&quot;OriginalDocumentTypeId&quot;:&quot;Mitra.Document.Knauf_supplier&quot;,&quot;ClassifierDocumentTypeId&quot;:null,&quot;IsDocumentTypeIdMapped&quot;:true}}}},&quot;ClassifierMinimumConfidence&quot;:{&quot;UI06bf42b6b5f84c3aa42724b8b024e3e8&quot;:&quot;0&quot;},&quot;DocumentTypesByPersistenceId&quot;:{&quot;UI06bf42b6b5f84c3aa42724b8b024e3e8&quot;:[]}}">
                <p2:ClassifyDocumentScope.Classifiers>
                  <p2:KeywordBasedClassifier HumanValidatedData="{x:Null}" LearningData="{x:Null}" DisplayName="Keyword Based Classifier" sap:VirtualizedContainerService.HintSize="234,116" sap2010:WorkflowViewState.IdRef="KeywordBasedClassifier_1" LearningFilePath="DocumentProcessing\keywordclass.json" PersistenceId="UI06bf42b6b5f84c3aa42724b8b024e3e8">
                    <p2:KeywordBasedClassifier.ClassifierResult>
                      <OutArgument x:TypeArguments="p3:ClassifierResult">
                        <DelegateArgumentReference x:TypeArguments="p3:ClassifierResult">
                          <DelegateOutArgument x:TypeArguments="p3:ClassifierResult" Name="ClassifierResult" />
                        </DelegateArgumentReference>
                      </OutArgument>
                    </p2:KeywordBasedClassifier.ClassifierResult>
                    <p2:KeywordBasedClassifier.DocumentObjectModel>
                      <InArgument x:TypeArguments="p4:Document">
                        <DelegateArgumentValue x:TypeArguments="p4:Document">
                          <DelegateInArgument x:TypeArguments="p4:Document" Name="DocumentObjectModel" />
                        </DelegateArgumentValue>
                      </InArgument>
                    </p2:KeywordBasedClassifier.DocumentObjectModel>
                    <p2:KeywordBasedClassifier.DocumentPath>
                      <InArgument x:TypeArguments="x:String">
                        <DelegateArgumentValue x:TypeArguments="x:String">
                          <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                        </DelegateArgumentValue>
                      </InArgument>
                    </p2:KeywordBasedClassifier.DocumentPath>
                    <p2:KeywordBasedClassifier.DocumentText>
                      <InArgument x:TypeArguments="x:String">
                        <DelegateArgumentValue x:TypeArguments="x:String">
                          <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                        </DelegateArgumentValue>
                      </InArgument>
                    </p2:KeywordBasedClassifier.DocumentText>
                    <p2:KeywordBasedClassifier.DocumentTypes>
                      <InArgument x:TypeArguments="p3:ClassifierDocumentType[]">
                        <DelegateArgumentValue x:TypeArguments="p3:ClassifierDocumentType[]">
                          <DelegateInArgument x:TypeArguments="p3:ClassifierDocumentType[]" Name="DocumentTypes" />
                        </DelegateArgumentValue>
                      </InArgument>
                    </p2:KeywordBasedClassifier.DocumentTypes>
                    <p2:KeywordBasedClassifier.PredictionId>
                      <InArgument x:TypeArguments="x:String">
                        <DelegateArgumentValue x:TypeArguments="x:String">
                          <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                        </DelegateArgumentValue>
                      </InArgument>
                    </p2:KeywordBasedClassifier.PredictionId>
                  </p2:KeywordBasedClassifier>
                </p2:ClassifyDocumentScope.Classifiers>
              </p2:ClassifyDocumentScope>
              <ui:GetRobotAsset AssetName="ML_ApiKey" CacheStrategy="None" DisplayName="Get Asset" FolderPath="Shared" sap:VirtualizedContainerService.HintSize="828.6666666666666,326.6666666666667" sap2010:WorkflowViewState.IdRef="GetRobotAsset_1">
                <ui:GetRobotAsset.TimeoutMS>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:GetRobotAsset.TimeoutMS>
                <ui:GetRobotAsset.Value>
                  <OutArgument x:TypeArguments="x:String">[ML_ApiKey]</OutArgument>
                </ui:GetRobotAsset.Value>
              </ui:GetRobotAsset>
              <ui:GetRobotAsset AssetName="Extracted_Information_Google_ID" CacheStrategy="None" DisplayName="Get Asset" FolderPath="Shared" sap:VirtualizedContainerService.HintSize="828.6666666666666,326.6666666666667" sap2010:WorkflowViewState.IdRef="GetRobotAsset_2">
                <ui:GetRobotAsset.TimeoutMS>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:GetRobotAsset.TimeoutMS>
                <ui:GetRobotAsset.Value>
                  <OutArgument x:TypeArguments="x:String">[ExtractedGoogleSheetID]</OutArgument>
                </ui:GetRobotAsset.Value>
              </ui:GetRobotAsset>
              <ui:GetRobotAsset AssetName="Pricing_EmailAddress" CacheStrategy="None" DisplayName="Get Asset" FolderPath="Shared" sap:VirtualizedContainerService.HintSize="828.6666666666666,326.6666666666667" sap2010:WorkflowViewState.IdRef="GetRobotAsset_3">
                <ui:GetRobotAsset.TimeoutMS>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:GetRobotAsset.TimeoutMS>
                <ui:GetRobotAsset.Value>
                  <OutArgument x:TypeArguments="x:String">[pricingMailAddress]</OutArgument>
                </ui:GetRobotAsset.Value>
              </ui:GetRobotAsset>
              <p5:DataExtractionScope ClassificationResult="{x:Null}" DisplayName="Data Extraction Scope" DocumentObjectModel="[DOM]" DocumentPath="[docPath]" DocumentText="[docText]" DocumentTypeId="[classsificationResult(0).DocumentTypeId]" ExtractionResult="[extractionresult]" FormatValuesIfPossible="True" sap:VirtualizedContainerService.HintSize="828.6666666666666,533.3333333333334" sap2010:WorkflowViewState.IdRef="DataExtractionScope_1" Taxonomy="[Taxnomy]" TaxonomyConfiguration="{}{&quot;TaxonomyMappings&quot;:{&quot;UI5d16f26ec8ee4be4a801080c9909f1cc&quot;:{&quot;DocumentTypeMappings&quot;:{&quot;Mitra.test.Tableee&quot;:{&quot;FieldMappings&quot;:{&quot;Mitra.test.Tableee.Table&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;Mitra.test.Tableee.Table&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;items\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;Mitra.test.Tableee.Table.Product&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;Mitra.test.Tableee.Table.Product&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;description\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;Mitra.test.Tableee.Table.Supportrate&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;Mitra.test.Tableee.Table.Supportrate&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;support_rate\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;Mitra.test.Tableee.AgreemeentNumber&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;Mitra.test.Tableee.AgreemeentNumber&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;claimback_ref\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;Mitra.test.Tableee.ValidStartDate&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;Mitra.test.Tableee.ValidStartDate&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;start_date\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;Mitra.test.Tableee.ValidENdDate&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;Mitra.test.Tableee.ValidENdDate&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;stop_date\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;Mitra.test.Tableee.SupplierAddress&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;Mitra.test.Tableee.SupplierAddress&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;name\&quot;&quot;,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:&quot;\&quot;\&quot;&quot;},&quot;Mitra.NoCategory.British_Gysum&quot;:{&quot;FieldMappings&quot;:{&quot;Mitra.NoCategory.British_Gysum.TABLE&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;Mitra.NoCategory.British_Gysum.TABLE&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;items\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;Mitra.NoCategory.British_Gysum.TABLE.Product&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;Mitra.NoCategory.British_Gysum.TABLE.Product&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;description\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;Mitra.NoCategory.British_Gysum.TABLE.Support_rate&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;Mitra.NoCategory.British_Gysum.TABLE.Support_rate&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;support_rate\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;Mitra.NoCategory.British_Gysum.AgreementNo&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;Mitra.NoCategory.British_Gysum.AgreementNo&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;claimback_ref\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;Mitra.NoCategory.British_Gysum.Startdate&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;Mitra.NoCategory.British_Gysum.Startdate&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;start_date\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;Mitra.NoCategory.British_Gysum.EndDate&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;Mitra.NoCategory.British_Gysum.EndDate&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;stop_date\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;Mitra.NoCategory.British_Gysum.Name&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;Mitra.NoCategory.British_Gysum.Name&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;name\&quot;&quot;,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:&quot;\&quot;\&quot;&quot;},&quot;Mitra.Document.Knauf_supplier&quot;:{&quot;FieldMappings&quot;:{&quot;Mitra.Document.Knauf_supplier.AgreementNo&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;Mitra.Document.Knauf_supplier.AgreementNo&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;claimback_ref\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;Mitra.Document.Knauf_supplier.startdate&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;Mitra.Document.Knauf_supplier.startdate&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;start_date\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;Mitra.Document.Knauf_supplier.EndDate&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;Mitra.Document.Knauf_supplier.EndDate&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;stop_date\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;Mitra.Document.Knauf_supplier.Name&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;Mitra.Document.Knauf_supplier.Name&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;name\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;Mitra.Document.Knauf_supplier.Table_Item&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;Mitra.Document.Knauf_supplier.Table_Item&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;items\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;Mitra.Document.Knauf_supplier.Table_Item.ProductDes&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;Mitra.Document.Knauf_supplier.Table_Item.ProductDes&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;description\&quot;&quot;,&quot;ShouldExtract&quot;:true},&quot;Mitra.Document.Knauf_supplier.Table_Item.Support_rate&quot;:{&quot;OriginalTaxonomyFieldId&quot;:&quot;Mitra.Document.Knauf_supplier.Table_Item.Support_rate&quot;,&quot;ExtractorTaxonomyFieldId&quot;:&quot;\&quot;support_rate\&quot;&quot;,&quot;ShouldExtract&quot;:true}},&quot;ExtractorDocumentTypeId&quot;:&quot;\&quot;\&quot;&quot;}}}},&quot;ExtractorMinimumConfidence&quot;:{&quot;UI5d16f26ec8ee4be4a801080c9909f1cc&quot;:&quot;0&quot;},&quot;ExtractorsAliases&quot;:{},&quot;DocumentTypeOptionsByExtractor&quot;:{&quot;UI5d16f26ec8ee4be4a801080c9909f1cc&quot;:[{&quot;FieldId&quot;:&quot;&quot;,&quot;SubOptions&quot;:[{&quot;FieldId&quot;:&quot;claimback_ref&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;name&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;start_date&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;stop_date&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;items&quot;,&quot;SubOptions&quot;:[{&quot;FieldId&quot;:&quot;description&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;support_rate&quot;,&quot;SubOptions&quot;:null},{&quot;FieldId&quot;:&quot;quantity&quot;,&quot;SubOptions&quot;:null}]}]}]}}">
                <p5:DataExtractionScope.Extractors>
                  <p6:MachineLearningExtractor Endpoint="{x:Null}" ApiKey="[ML_ApiKey]" Configuration="{}{&quot;Endpoint&quot;:&quot;&quot;,&quot;ApiKey&quot;:&quot;TnfAgcpdryR5LRJb5yGufpvukgiMXzsenTRF93sScevyY/U9Qv9K/6cHCkksFwOmYRffiBfAOe76EUCcAhpCTQ==&quot;,&quot;SelectedMLSkill&quot;:&quot;Finalskillagreement&quot;,&quot;AvailableMLSkills&quot;:[&quot;Agreements&quot;,&quot;AgreementSkill&quot;,&quot;AgreementsNew&quot;,&quot;AgreementUpgrade_sini&quot;,&quot;Finalskillagreement&quot;,&quot;PO_MLSkill&quot;]}" DisplayName="Machine Learning Extractor" sap:VirtualizedContainerService.HintSize="234,199.33333333333334" sap2010:WorkflowViewState.IdRef="MachineLearningExtractor_2" PersistenceId="UI5d16f26ec8ee4be4a801080c9909f1cc" RetryOnFailure="True" SelectedMLSkill="Finalskillagreement" Timeout="100000" UseServerSideOCR="False">
                    <p6:MachineLearningExtractor.AvailableMLSkills>
                      <sc:BindingList x:TypeArguments="x:String" AllowEdit="True" AllowNew="False" AllowRemove="True" RaiseListChangedEvents="True">
                        <x:String>Agreements</x:String>
                        <x:String>AgreementSkill</x:String>
                        <x:String>AgreementsNew</x:String>
                        <x:String>AgreementUpgrade_sini</x:String>
                        <x:String>Finalskillagreement</x:String>
                        <x:String>PO_MLSkill</x:String>
                      </sc:BindingList>
                    </p6:MachineLearningExtractor.AvailableMLSkills>
                    <p6:MachineLearningExtractor.DocumentBounds>
                      <InArgument x:TypeArguments="p7:ResultsDocumentBounds">
                        <DelegateArgumentValue x:TypeArguments="p7:ResultsDocumentBounds">
                          <DelegateInArgument x:TypeArguments="p7:ResultsDocumentBounds" Name="DocumentBounds" />
                        </DelegateArgumentValue>
                      </InArgument>
                    </p6:MachineLearningExtractor.DocumentBounds>
                    <p6:MachineLearningExtractor.DocumentObjectModel>
                      <InArgument x:TypeArguments="p4:Document">
                        <DelegateArgumentValue x:TypeArguments="p4:Document">
                          <DelegateInArgument x:TypeArguments="p4:Document" Name="DocumentObjectModel" />
                        </DelegateArgumentValue>
                      </InArgument>
                    </p6:MachineLearningExtractor.DocumentObjectModel>
                    <p6:MachineLearningExtractor.DocumentPath>
                      <InArgument x:TypeArguments="x:String">
                        <DelegateArgumentValue x:TypeArguments="x:String">
                          <DelegateInArgument x:TypeArguments="x:String" Name="DocumentPath" />
                        </DelegateArgumentValue>
                      </InArgument>
                    </p6:MachineLearningExtractor.DocumentPath>
                    <p6:MachineLearningExtractor.DocumentText>
                      <InArgument x:TypeArguments="x:String">
                        <DelegateArgumentValue x:TypeArguments="x:String">
                          <DelegateInArgument x:TypeArguments="x:String" Name="DocumentText" />
                        </DelegateArgumentValue>
                      </InArgument>
                    </p6:MachineLearningExtractor.DocumentText>
                    <p6:MachineLearningExtractor.ExtractorDocumentType>
                      <InArgument x:TypeArguments="p8:ExtractorDocumentType">
                        <DelegateArgumentValue x:TypeArguments="p8:ExtractorDocumentType">
                          <DelegateInArgument x:TypeArguments="p8:ExtractorDocumentType" Name="ExtractorDocumentType" />
                        </DelegateArgumentValue>
                      </InArgument>
                    </p6:MachineLearningExtractor.ExtractorDocumentType>
                    <p6:MachineLearningExtractor.ExtractorResult>
                      <OutArgument x:TypeArguments="p8:ExtractorResult">
                        <DelegateArgumentReference x:TypeArguments="p8:ExtractorResult">
                          <DelegateOutArgument x:TypeArguments="p8:ExtractorResult" Name="ExtractorResult" />
                        </DelegateArgumentReference>
                      </OutArgument>
                    </p6:MachineLearningExtractor.ExtractorResult>
                    <p6:MachineLearningExtractor.PredictionId>
                      <InArgument x:TypeArguments="x:String">
                        <DelegateArgumentValue x:TypeArguments="x:String">
                          <DelegateInArgument x:TypeArguments="x:String" Name="PredictionId" />
                        </DelegateArgumentValue>
                      </InArgument>
                    </p6:MachineLearningExtractor.PredictionId>
                  </p6:MachineLearningExtractor>
                </p5:DataExtractionScope.Extractors>
              </p5:DataExtractionScope>
              <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="828.6666666666666,54" sap2010:WorkflowViewState.IdRef="CommentOut_19">
                <ui:CommentOut.Body>
                  <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="400,492.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_33">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <p:PresentValidationStation AutomaticExtractionResults="[extractionresult]" DisplayName="Present Validation Station" DocumentObjectModel="[DOM]" DocumentPath="[docPath]" DocumentText="[docText]" sap:VirtualizedContainerService.HintSize="338,382" sap2010:WorkflowViewState.IdRef="PresentValidationStation_3" ShowOnlyRelevantPageRange="False" Taxonomy="[Taxnomy]" ValidatedExtractionResults="[extractedResult]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </p:PresentValidationStation>
                  </Sequence>
                </ui:CommentOut.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:CommentOut>
              <p5:ExportExtractionResults DataSet="[dataSet]" DisplayName="Export Extraction Results" ExtractionResult="[extractionresult]" sap:VirtualizedContainerService.HintSize="828.6666666666666,182" sap2010:WorkflowViewState.IdRef="ExportExtractionResults_2" IncludeConfidence="False" IncludeOCRConfidence="False" />
              <Assign sap:VirtualizedContainerService.HintSize="828.6666666666666,63.333333333333336" sap2010:WorkflowViewState.IdRef="Assign_7">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Int32">[IterateCount]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Int32">1</InArgument>
                </Assign.Value>
              </Assign>
              <ui:ForEach x:TypeArguments="sd2:DataTable" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="828.6666666666666,3384.6666666666665" sap2010:WorkflowViewState.IdRef="ForEach`1_3" Values="[dataSet.Tables]">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="sd2:DataTable">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="sd2:DataTable" Name="item" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="792,3255.3333333333335" sap2010:WorkflowViewState.IdRef="Sequence_3">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ugas:GoogleSheetsApplicationScope ConnectionAccountName="{x:Null}" ConnectionId="{x:Null}" ContinueOnError="{x:Null}" FileId="{x:Null}" Filename="{x:Null}" ParentFolderId="{x:Null}" ParentFolderPath="{x:Null}" SpreadsheetName="{x:Null}" Timeout="{x:Null}" Account="danancha.perera@travisperkins.co.uk" Action="UseExisting" DisplayName="Use Google Spreadsheet" sap:VirtualizedContainerService.HintSize="730,3144.6666666666665" sap2010:WorkflowViewState.IdRef="GoogleSheetsApplicationScope_1" Mode="EnterId" SpreadsheetId="[ExtractedGoogleSheetID]" UseConnectionService="False" UserEmail="danancha.perera@travisperkins.co.uk">
                        <ugas:GoogleSheetsApplicationScope.Body>
                          <ActivityAction x:TypeArguments="ugas:IGoogleSheetTarget">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="ugas:IGoogleSheetTarget" Name="Extracted_Information" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="696,2847.3333333333335" sap2010:WorkflowViewState.IdRef="Sequence_14">
                              <Sequence.Variables>
                                <Variable x:TypeArguments="x:String" Name="worksheetName" />
                              </Sequence.Variables>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="634,63.333333333333336" sap2010:WorkflowViewState.IdRef="Assign_5">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[worksheetName]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[item.TableName.Replace(" ","")]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="634,92" sap2010:WorkflowViewState.IdRef="WriteLine_3" Text="[worksheetName]" />
                              <ui:IfElseIf DisplayName="Else If" sap:VirtualizedContainerService.HintSize="634,1588.6666666666667" sap2010:WorkflowViewState.IdRef="IfElseIf_1">
                                <ui:IfElseIf.ConditionBlocks>
                                  <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                                    <ui:IfElseIfBlock BlockType="If" Condition="[IterateCount=1]">
                                      <ui:IfElseIfBlock.Then>
                                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,174" sap2010:WorkflowViewState.IdRef="Sequence_18">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="338,63.333333333333336" sap2010:WorkflowViewState.IdRef="Assign_6">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[worksheetName]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">Sheet1</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </ui:IfElseIfBlock.Then>
                                    </ui:IfElseIfBlock>
                                    <ui:IfElseIfBlock BlockType="ElseIf" Condition="[IterateCount=2]">
                                      <ui:IfElseIfBlock.Then>
                                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,174" sap2010:WorkflowViewState.IdRef="Sequence_19">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="338,63.333333333333336" sap2010:WorkflowViewState.IdRef="Assign_9">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[worksheetName]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">Sheet4</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </ui:IfElseIfBlock.Then>
                                    </ui:IfElseIfBlock>
                                    <ui:IfElseIfBlock BlockType="ElseIf" Condition="[IterateCount=3]">
                                      <ui:IfElseIfBlock.Then>
                                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,174" sap2010:WorkflowViewState.IdRef="Sequence_20">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="338,63.333333333333336" sap2010:WorkflowViewState.IdRef="Assign_10">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[worksheetName]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">Sheet5</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </ui:IfElseIfBlock.Then>
                                    </ui:IfElseIfBlock>
                                    <ui:IfElseIfBlock BlockType="ElseIf" Condition="[IterateCount=4]">
                                      <ui:IfElseIfBlock.Then>
                                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,174" sap2010:WorkflowViewState.IdRef="Sequence_21">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="338,63.333333333333336" sap2010:WorkflowViewState.IdRef="Assign_11">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[worksheetName]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">Sheet6</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </ui:IfElseIfBlock.Then>
                                    </ui:IfElseIfBlock>
                                    <ui:IfElseIfBlock BlockType="ElseIf" Condition="[IterateCount=5]">
                                      <ui:IfElseIfBlock.Then>
                                        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="400,174" sap2010:WorkflowViewState.IdRef="Sequence_22">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign sap:VirtualizedContainerService.HintSize="338,63.333333333333336" sap2010:WorkflowViewState.IdRef="Assign_12">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[worksheetName]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">Sheet7</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </ui:IfElseIfBlock.Then>
                                    </ui:IfElseIfBlock>
                                  </sc:BindingList>
                                </ui:IfElseIf.ConditionBlocks>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:IfElseIf>
                              <Assign sap:VirtualizedContainerService.HintSize="634,63.333333333333336" sap2010:WorkflowViewState.IdRef="Assign_8">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[IterateCount]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[IterateCount+1]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Flowchart sap:VirtualizedContainerService.HintSize="634,637.3333333333334" sap2010:WorkflowViewState.IdRef="Flowchart_1">
                                <Flowchart.Variables>
                                  <Variable x:TypeArguments="x:Boolean" Name="readExpBool" />
                                </Flowchart.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
                                    <av:Size x:Key="ShapeSize">60,74.66666666666667</av:Size>
                                    <av:PointCollection x:Key="ConnectorLocation">300,77.16666666666667 300,107.16666666666667 260,107.16666666666667 260,253</av:PointCollection>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Flowchart.StartNode>
                                  <x:Reference>__ReferenceID0</x:Reference>
                                </Flowchart.StartNode>
                                <FlowStep x:Name="__ReferenceID0">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <av:Point x:Key="ShapeLocation">160,253</av:Point>
                                      <av:Size x:Key="ShapeSize">200,54</av:Size>
                                      <av:PointCollection x:Key="ConnectorLocation">260,307 260,337 259.97499999999997,337 259.97499999999997,357</av:PointCollection>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="200,54" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <TryCatch.Try>
                                      <Sequence sap:VirtualizedContainerService.HintSize="400,896.6666666666666" sap2010:WorkflowViewState.IdRef="Sequence_34">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <Assign sap:VirtualizedContainerService.HintSize="338,63.333333333333336" sap2010:WorkflowViewState.IdRef="Assign_16">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Boolean">[readExpBool]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                          </Assign.Value>
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </Assign>
                                        <uga:ClearRange ContinueOnError="{x:Null}" SpreadsheetId="{x:Null}" AuthScopesInvalid="False" DisplayName="Clear Range" GoogleSpreadsheet="[Extracted_Information]" sap:VirtualizedContainerService.HintSize="338,143.33333333333334" sap2010:WorkflowViewState.IdRef="ClearRange_1" Range="A1:G4000" SheetName="[worksheetName]" />
                                        <uga:WriteRange ContinueOnError="{x:Null}" Request="{x:Null}" Result="{x:Null}" SpreadsheetId="{x:Null}" AuthScopesInvalid="False" DataTable="[item]" DisplayName="Write Range" GoogleSpreadsheet="[Extracted_Information]" sap:VirtualizedContainerService.HintSize="338,230" sap2010:WorkflowViewState.IdRef="WriteRange_4" IncludeHeaders="True" IsInsideBatchUpdateScope="False" SheetName="[worksheetName]" StartingCell="A1" />
                                        <uga:ReadRange ContinueOnError="{x:Null}" Range="{x:Null}" SpreadsheetId="{x:Null}" AuthScopesInvalid="False" DisplayName="Read Range" GoogleSpreadsheet="[Extracted_Information]" sap:VirtualizedContainerService.HintSize="338,229.33333333333334" sap2010:WorkflowViewState.IdRef="ReadRange_1" IncludeHeaders="True" Result="[simpleFieldDt]" SheetName="Sheet1" />
                                      </Sequence>
                                    </TryCatch.Try>
                                    <TryCatch.Catches>
                                      <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="404.6666666666667,22" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ActivityAction x:TypeArguments="s:Exception">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                                          </ActivityAction.Argument>
                                          <Assign sap:VirtualizedContainerService.HintSize="262,63.333333333333336" sap2010:WorkflowViewState.IdRef="Assign_15">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">[readExpBool]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">[False]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </ActivityAction>
                                      </Catch>
                                    </TryCatch.Catches>
                                  </TryCatch>
                                  <FlowStep.Next>
                                    <FlowDecision x:Name="__ReferenceID1" Condition="[readExpBool]" DisplayName="Flow Decision" sap:VirtualizedContainerService.HintSize="78.66666666666667,86.66666666666667" sap2010:WorkflowViewState.IdRef="FlowDecision_1">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <av:Point x:Key="ShapeLocation">220.64166666666665,357</av:Point>
                                          <av:Size x:Key="ShapeSize">78.66666666666667,86.66666666666667</av:Size>
                                          <av:PointCollection x:Key="FalseConnector">299.30833333333334,400.3333333333333 390,400.3333333333333 390,280 360,280</av:PointCollection>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <FlowDecision.False>
                                        <x:Reference>__ReferenceID0</x:Reference>
                                      </FlowDecision.False>
                                    </FlowDecision>
                                  </FlowStep.Next>
                                </FlowStep>
                                <x:Reference>__ReferenceID1</x:Reference>
                              </Flowchart>
                              <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="634,92" sap2010:WorkflowViewState.IdRef="WriteLine_4" Text="[simpleFieldDt.Rows(0).Item(&quot;AgreemeentNumber&quot;).ToString]" />
                            </Sequence>
                          </ActivityAction>
                        </ugas:GoogleSheetsApplicationScope.Body>
                        <ugas:GoogleSheetsApplicationScope.CredentialID>
                          <InArgument x:TypeArguments="x:String">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                        </ugas:GoogleSheetsApplicationScope.CredentialID>
                        <ugas:GoogleSheetsApplicationScope.CredentialSecret>
                          <InArgument x:TypeArguments="x:String">
                            <Literal x:TypeArguments="x:String" Value="" />
                          </InArgument>
                        </ugas:GoogleSheetsApplicationScope.CredentialSecret>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ugas:GoogleSheetsApplicationScope>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEach.Body>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:ForEach>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke MoveDataOneDrive workflow" sap:VirtualizedContainerService.HintSize="828.6666666666666,115.33333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="DocumentExtraction\MoveDataOneDrive.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="In_AgreementID">[simpleFieldDt.Rows(0).Item("AgreemeentNumber").ToString]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke checkingMandatoryFields workflow" sap:VirtualizedContainerService.HintSize="828.6666666666666,115.33333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="DocumentExtraction\checkingMandatoryFields.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InOutArgument x:TypeArguments="x:Boolean" x:Key="In_SimpleFieldsbool">[simplefieldBool]</InOutArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="Out_AgreementNumber">[agreementNumber]</OutArgument>
                  <InArgument x:TypeArguments="sd2:DataTable" x:Key="In_SimpleDT">[simpleFieldDt]</InArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="SpiltBrachCode.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="828.6666666666666,115.33333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="SpiltBrachCode.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="In_InitialString">
                    <VisualBasicValue x:TypeArguments="x:String" ExpressionText="simpleFieldDt.Rows(0).Item(&quot;Name&quot;).ToString" />
                  </InArgument>
                  <OutArgument x:TypeArguments="x:String" x:Key="Out_BranchCode">
                    <VisualBasicReference x:TypeArguments="x:String" ExpressionText="branchName" />
                  </OutArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="getBrachCode.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="828.6666666666666,115.33333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="getBrachCode.xaml">
                <ui:InvokeWorkflowFile.Arguments>
                  <OutArgument x:TypeArguments="x:String" x:Key="Out_BranchCode">
                    <VisualBasicReference x:TypeArguments="x:String" ExpressionText="branchCode" />
                  </OutArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="In_BrachCode">
                    <VisualBasicValue x:TypeArguments="x:String" ExpressionText="branchName" />
                  </InArgument>
                  <OutArgument x:TypeArguments="x:Boolean" x:Key="Out_branchCodeAvailable">
                    <VisualBasicReference x:TypeArguments="x:Boolean" ExpressionText="branchCodeAvaialble" />
                  </OutArgument>
                </ui:InvokeWorkflowFile.Arguments>
              </ui:InvokeWorkflowFile>
              <If Condition="[simplefieldBool=False and branchCodeAvaialble=True]" sap:VirtualizedContainerService.HintSize="828.6666666666666,1641.3333333333333" sap2010:WorkflowViewState.IdRef="If_1">
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="400,381.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_23">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="AddNewDeal.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="338,115.33333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Add_New_deal\AddNewDeal.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="sd2:DataTable" x:Key="In_simpleFieldDt">
                          <VisualBasicValue x:TypeArguments="sd2:DataTable" ExpressionText="simpleFieldDt" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="In_DocPath">
                          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="docPath" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="In_Suppliername">
                          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="In_supplierName" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="In_ReceivedDate">
                          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="In_ReceivedDate" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="In_branchCode">
                          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="branchCode" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="In_Supplier">
                          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="In_supplierName" />
                        </InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="MoveFolderPDF.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="338,115.33333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="MoveFolderPDF.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="In_CurrentPath">
                          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="docPath" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="In_destignation">
                          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="&quot;C:\Users\&quot;+Environment.UserName+&quot;\Documents\UiPath\GetPDFFromEmail\Data\OutPut\Success&quot;" />
                        </InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="592,1077.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_24">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="x:String" Name="agreementNo" />
                    </Sequence.Variables>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <Assign sap:VirtualizedContainerService.HintSize="530,63.333333333333336" sap2010:WorkflowViewState.IdRef="Assign_13">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:String">[agreementNo]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:String">[simpleFieldDt.Rows(0).Item("AgreemeentNumber").ToString]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <umab:GmailApplicationCard ConnectionAccountName="{x:Null}" ConnectionId="{x:Null}" Account="dperera@mitrai.com" DisplayName="Use Gmail" EmailAddress="dperera@mitrai.com" sap:VirtualizedContainerService.HintSize="530,708" sap2010:WorkflowViewState.IdRef="GmailApplicationCard_1" Timeout="90" UseConnectionService="False">
                      <umab:GmailApplicationCard.Body>
                        <ActivityAction x:TypeArguments="um:IMailQuickHandle">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="um:IMailQuickHandle" Name="Gmail" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="496,520" sap2010:WorkflowViewState.IdRef="Sequence_29">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <umab:SendMailX Bcc="{x:Null}" Cc="{x:Null}" HtmlBodyFromText="{x:Null}" ReplyTo="{x:Null}" Account="[Gmail]" Body="[&quot;Agreement No: &quot;+agreementNo +&quot;unable to extract Header.&quot;]" BodyType="Text" DisplayName="Send Email" sap:VirtualizedContainerService.HintSize="434,409.3333333333333" sap2010:WorkflowViewState.IdRef="SendMailX_1" Importance="Normal" IsDraft="False" MaxBodyDocumentSizeMB="2" Sensitivity="Normal" Subject="[&quot;Agreement No: &quot;+agreementNo+&quot;Unable to extract data from PDF Header&quot;]" To="[pricingMailAddress]" UseDocumentAsBody="False">
                              <umab:SendMailX.Files>
                                <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                                  <InArgument x:TypeArguments="x:String">[docPath]</InArgument>
                                </scg:List>
                              </umab:SendMailX.Files>
                              <umab:SendMailX.HtmlBodyFromFile>
                                <umabh:HtmlContentArgument FilePath=".data/HtmlContent0.html">
                                  <umabh:HtmlContentArgument.RuntimeImages>
                                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                  </umabh:HtmlContentArgument.RuntimeImages>
                                  <umabh:HtmlContentArgument.ValueMappings>
                                    <scg:List x:TypeArguments="umabh:HtmlValueMappingBase" Capacity="0" />
                                  </umabh:HtmlContentArgument.ValueMappings>
                                </umabh:HtmlContentArgument>
                              </umab:SendMailX.HtmlBodyFromFile>
                            </umab:SendMailX>
                          </Sequence>
                        </ActivityAction>
                      </umab:GmailApplicationCard.Body>
                      <umab:GmailApplicationCard.ClientId>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </umab:GmailApplicationCard.ClientId>
                      <umab:GmailApplicationCard.ClientSecret>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </umab:GmailApplicationCard.ClientSecret>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </umab:GmailApplicationCard>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Invoke MoveFolderPDF workflow" sap:VirtualizedContainerService.HintSize="530,115.33333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="MoveFolderPDF.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="In_CurrentPath">
                          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="docPath" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="In_destignation">
                          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="&quot;C:\Users\&quot;+Environment.UserName+&quot;\Documents\Uipath\GetPDFFromEmail\Data\OutPut\Errorr&quot;" />
                        </InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                    </ui:InvokeWorkflowFile>
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
  </Sequence>
</Activity>